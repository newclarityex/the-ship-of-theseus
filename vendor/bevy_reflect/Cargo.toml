# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
name = "bevy_reflect"
version = "0.13.1"
description = "Dynamically interact with rust types"
homepage = "https://bevyengine.org"
readme = "README.md"
keywords = ["bevy"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/bevyengine/bevy"

[[example]]
name = "reflect_docs"
path = "examples/reflect_docs.rs"
required-features = ["documentation"]

[dependencies.bevy_math]
version = "0.13.1"
features = ["serialize"]
optional = true

[dependencies.bevy_ptr]
version = "0.13.1"

[dependencies.bevy_reflect_derive]
version = "0.13.1"

[dependencies.bevy_utils]
version = "0.13.1"

[dependencies.downcast-rs]
version = "1.2"

[dependencies.erased-serde]
version = "0.4"

[dependencies.glam]
version = "0.25"
features = ["serde"]
optional = true

[dependencies.serde]
version = "1"

[dependencies.smol_str]
version = "0.2.0"
optional = true

[dependencies.thiserror]
version = "1.0"

[dev-dependencies.bincode]
version = "1.3"

[dev-dependencies.rmp-serde]
version = "1.1"

[dev-dependencies.ron]
version = "0.8.0"

[dev-dependencies.serde]
version = "1"
features = ["derive"]

[dev-dependencies.serde_json]
version = "1.0"

[dev-dependencies.static_assertions]
version = "1.1.0"

[features]
bevy = [
    "smallvec",
    "bevy_math",
    "smol_str",
]
bevy_math = [
    "glam",
    "dep:bevy_math",
]
default = []
documentation = ["bevy_reflect_derive/documentation"]
glam = ["dep:glam"]
smallvec = []

[lints.clippy]
doc_markdown = "warn"
manual_let_else = "warn"
match_same_arms = "warn"
ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
redundant_else = "warn"
semicolon_if_nothing_returned = "warn"
type_complexity = "allow"
undocumented_unsafe_blocks = "warn"

[lints.rust]
missing_docs = "warn"
unsafe_op_in_unsafe_fn = "warn"
